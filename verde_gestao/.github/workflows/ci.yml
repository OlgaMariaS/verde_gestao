name: ci

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

permissions:
  contents: read

jobs:
  backend:
    name: backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      # Se usar variáveis/segredos (ex.: URL de DB para testes), injete aqui via env
      # env:
      #   DB_URL: ${{ secrets.TEST_DB_URL }}

      - name: Verify (compile + tests + checks)
        run: mvn -B -DskipTests=false verify

      # Opcional: gerar artefato do backend (JAR) para inspeção em PRs
      - name: Upload JAR
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: backend/target/*.jar
          if-no-files-found: ignore

  frontend:
    name: frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Install deps
        run: npm ci

      # Se tiver script de lint no package.json (recomendado: eslint)
      - name: Lint
        run: npm run lint --if-present

      - name: Test
        run: npm test -- --ci --watchAll=false

      - name: Build
        run: npm run build

      # Opcional: publicar build para inspeção
      - name: Upload build
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/build
          if-no-files-found: ignore
